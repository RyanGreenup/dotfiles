//  _        ___                                      ___ _
// | |      / __)_                                   / __|_)
// | | ____| |__| |_ _ _ _ ____      ____ ___  ____ | |__ _  ____    ____ ___  ____
// | |/ _  )  __)  _) | | |    \    / ___) _ \|  _ \|  __) |/ _  |  / ___) _ \|  _ \
// | ( (/ /| |  | |_| | | | | | |  ( (__| |_| | | | | |  | ( ( | |_| |  | |_| | | | |
// |_|\____)_|   \___)____|_|_|_|   \____)___/|_| |_|_|  |_|\_|| (_)_|   \___/|_| |_|
// A WindowManager for Adventurers                         (____/
// For info about configuration please visit https://github.com/leftwm/leftwm/wiki
#![enable(implicit_some)]
(
    modkey: "Mod4",
    mousekey: "Mod4",
    tags: [
        "1.Browser ‚ôñ",
        "2.Term ‚ôó",
        "3.Shell ‚ôî",
        "4.Code ‚ôï",
        "5",
        "6.Notes üìù",
        "7",
        "8.Messaging",
        "9",
        "10",
    ],
    max_window_width: None,
    layouts: [
        MainAndVertStack,
        MainAndHorizontalStack,
        MainAndDeck,
        GridHorizontal,
        EvenHorizontal,
        EvenVertical,
        Fibonacci,
        LeftMain,
        CenterMain,
        CenterMainBalanced,
        CenterMainFluid,
        Monocle,
        RightWiderLeftStack,
        LeftWiderRightStack,
    ],
    layout_mode: Tag,
    insert_behavior: Bottom,
    scratchpad: [
        ( name: "Alacritty", // This is the name which is referenced when calling (case-sensitive)
          value: "tmux list-sessions | grep scratchpad && alacritty -e tmux attach -t scratchpad || alacritty -e tmux new -t  scratchpad", // The command to load the application if it isn't started (first application to start)
          // x, y, width, height are in pixels when an integer is inputted or a percentage when a float is inputted.
          // These values are relative to the size of the workspace, and will be restricted depending on the workspace size.
          x: 860, y: 390, height: 300, width: 200, spawn_floating: true
        ),
    ],
window_rules: [
  // windows whose WM_CLASS is "Element" will be spawn on tag 8 (by position, 1-indexed)
  ( window_class: "Element", spawn_on_tag: 8 ),
  // windows whose window title is "Pentablet" will be spawned floating on tag 9
  ( window_title: "Pentablet", spawn_on_tag: 9, spawn_floating: true ),
  // windows whose WM_CLASS matches "*.app_2.*" regular expression will be spawn on tag 2
  ( window_title: "*.py*", spawn_on_tag: 2 ),
],
    disable_current_tag_swap: false,
    disable_tile_drag: false,
    focus_behaviour: Sloppy,
    focus_new_windows: true,
    keybind: [
        (command: ToggleScratchPad, value: "Alacritty" /* Name set for the scratchpad */, modifier: ["modkey"], key: "grave"),
        (command: ReturnToLastTag, value: "", modifier: ["modkey"], key: "Tab"),
        // (command: FloatingToTile, value: "", modifier: ["modkey", "Shift"], key: "t"),
        // (command: Execute, value: "leftwm_change_theme.sh", modifier: ["modkey"], key: "a"),
        (command: Execute, value: "rofi -location 2 -show drun lines 10 -eh 1 -mathing fuzzy -show-icons -window-thumbnail  -theme-str \'element-icon { size: 3ch;}\' -theme DarkBlue", modifier: ["modkey"], key: "d"),
        (command: Execute, value: "rofi -location 2 -show drun lines 10 -eh 1 -mathing fuzzy -show-icons -window-thumbnail  -theme-str \'element-icon { size: 3ch;}\' -theme DarkBlue", modifier: ["modkey"], key: "space"),
        (command: Execute, value: "rofi -show calc -modi calc -no-show-match -no-sort -theme DarkBlue", modifier: ["modkey"], key: "c"),
        (command: Execute, value: "rofi -location 2 -show window lines 10 -eh 2 -mathing fuzzy -show-icons -window-thumbnail  -theme-str \'element-icon { size: 6ch; }\' -theme DarkBlue", modifier: ["modkey"], key: "slash"),

        (command: ToggleFloating, modifier: ["modkey", "Shift"], key: "space"),

        (command: MoveWindowToNextTag, modifier: ["modkey", "Shift"], key: "p"),
        (command: FocusNextTag, value: "dmenu_run", modifier: ["modkey"], key: "p"),

        (command: FocusPreviousTag, value: "dmenu_run", modifier: ["modkey"], key: "n"),
        (command: MoveWindowToPreviousTag, modifier: ["modkey", "Shift"], key: "n"),


        (command: IncreaseMainWidth, value: "5", modifier: ["modkey"], key: "l"),
        (command: DecreaseMainWidth, value: "5", modifier: ["modkey"], key: "h"),


        (command: ToggleSticky, modifier: ["modkey"], key: "s"),


        (command: Execute, value: "alacritty", modifier: ["modkey", "Shift"], key: "Return"),
        (command: Execute, value: "alacritty", modifier: ["modkey"], key: "t"),
        // (command: Execute, value: "cd ~/Agenda/Agenda_Maybe/ && alacritty -e lf", modifier: ["modkey", "Shift"], key: "t"),
        // --layout ~/Agenda/Agenda_Maybe/tool/agenda.kdl
        // (command: Execute, value: "cd ~/Agenda/Agenda_Maybe/ && alacritty -e zellij attach agenda || zellij --session agenda ", modifier: ["modkey", "Shift"], key: "t"),
        (command: Execute, value: "zellij list-sessions | grep agenda && alacritty -e zellij attach agenda || alacritty -e zellij --session agenda", modifier: ["modkey", "Shift"], key: "t"),
        (command: Execute, value: "printf mem | sudo tee /sys/power/state", modifier: ["modkey", "Shift"], key: "BackSpace"),
        (command: CloseWindow, value: "", modifier: ["modkey"], key: "q"),
        (command: SoftReload, value: "", modifier: ["modkey", "Shift"], key: "r"),
        (command: Execute, value: "loginctl kill-session $XDG_SESSION_ID", modifier: ["modkey", "Shift"], key: "x"),
        (command: Execute, value: "slock", modifier: ["modkey", "Control"], key: "l"),
        (command: MoveToLastWorkspace, value: "", modifier: ["modkey", "Shift"], key: "w"),
        (command: SwapTags, value: "", modifier: ["modkey"], key: "w"), // This swaps the desktop in the monitors (workspace=monitor
        (command: MoveWindowUp, value: "", modifier: ["modkey", "Shift"], key: "k"),
        (command: MoveWindowDown, value: "", modifier: ["modkey", "Shift"], key: "j"),
        (command: MoveWindowTop, value: "", modifier: ["modkey"], key: "Return"),
        (command: FocusWindowUp, value: "", modifier: ["modkey"], key: "k"),
        (command: FocusWindowDown, value: "", modifier: ["modkey"], key: "j"),
        (command: NextLayout, value: "", modifier: ["modkey", "Control"], key: "k"),
        (command: PreviousLayout, value: "", modifier: ["modkey", "Control"], key: "j"),
        (command: MoveWindowUp, value: "", modifier: ["modkey", "Shift"], key: "Up"),
        (command: MoveWindowDown, value: "", modifier: ["modkey", "Shift"], key: "Down"),
        (command: FocusWindowUp, value: "", modifier: ["modkey"], key: "Up"),
        (command: FocusWindowDown, value: "", modifier: ["modkey"], key: "Down"),
        (command: NextLayout, value: "", modifier: ["modkey", "Control"], key: "Up"),
        (command: PreviousLayout, value: "", modifier: ["modkey", "Control"], key: "Down"),
        (command: FocusWorkspaceNext, value: "", modifier: ["modkey"], key: "Right"),
        (command: FocusWorkspacePrevious, value: "", modifier: ["modkey"], key: "Left"),
        (command: GotoTag, value: "1", modifier: ["modkey"], key: "1"),
        (command: GotoTag, value: "2", modifier: ["modkey"], key: "2"),
        (command: GotoTag, value: "3", modifier: ["modkey"], key: "3"),
        (command: GotoTag, value: "4", modifier: ["modkey"], key: "4"),
        (command: GotoTag, value: "5", modifier: ["modkey"], key: "5"),
        (command: GotoTag, value: "6", modifier: ["modkey"], key: "6"),
        (command: GotoTag, value: "7", modifier: ["modkey"], key: "7"),
        (command: GotoTag, value: "8", modifier: ["modkey"], key: "8"),
        (command: GotoTag, value: "9", modifier: ["modkey"], key: "9"),
        (command: MoveToTag, value: "1", modifier: ["modkey", "Shift"], key: "1"),
        (command: MoveToTag, value: "2", modifier: ["modkey", "Shift"], key: "2"),
        (command: MoveToTag, value: "3", modifier: ["modkey", "Shift"], key: "3"),
        (command: MoveToTag, value: "4", modifier: ["modkey", "Shift"], key: "4"),
        (command: MoveToTag, value: "5", modifier: ["modkey", "Shift"], key: "5"),
        (command: MoveToTag, value: "6", modifier: ["modkey", "Shift"], key: "6"),
        (command: MoveToTag, value: "7", modifier: ["modkey", "Shift"], key: "7"),
        (command: MoveToTag, value: "8", modifier: ["modkey", "Shift"], key: "8"),
        (command: MoveToTag, value: "9", modifier: ["modkey", "Shift"], key: "9"),
        (command: ToggleFullScreen, value: "", modifier: ["modkey"], key: "m"),
        (command: RotateTag, value: "", modifier: ["modkey"], key: "z"),
        (command: SetMarginMultiplier, value: "8.0", modifier: ["modkey", "Control"], key: "equal"),
        (command: SetMarginMultiplier, value: "3.0", modifier: ["modkey", "Control"], key: "minus"),
        (command: SetMarginMultiplier, value: "0.5", modifier: ["modkey", "Control"], key: "0"),
        (command: FocusNextTag, value: "", modifier: ["Control", "Alt"], key: "Right"),
        (command: FocusPreviousTag, value: "", modifier: ["Control", "Alt"], key: "Left"),
        (command: SetLayout, value: "Fibonacci", modifier: ["modkey"], key: "f"),
        (command: SetLayout, value: "Fibonacci", modifier: ["modkey"], key: "F1"),
        (command: SetLayout, value: "MainAndDeck", modifier: ["modkey"], key: "F2"),
        (command: SetLayout, value: "MainAndVertStack", modifier: ["modkey"], key: "F3"),
        (command: SetLayout, value: "MainAndHorizontalStack", modifier: ["modkey"], key: "F4"),
        (command: SetLayout, value: "CenterMain", modifier: ["modkey"], key: "F5"),
        (command: SetLayout, value: "CenterMainBalanced", modifier: ["modkey"], key: "F6"),
        (command: SetLayout, value: "GridHorizontal", modifier: ["modkey"], key: "F7"),
        (command: HardReload, value: "", modifier: ["modkey", "Control"], key: "r"),
        (command: Execute, value: "maim --select | xclip -selection clipboard -target image/png", modifier: ["modkey", "Shift"], key: "s"),
        // (command: Execute, value: "dash /home/ryan/.local/bin/dokuwiki_dmenu.sh", modifier: ["modkey"], key: "n"),
        // (command: Execute, value: "dash /home/ryan/.local/bin/jupyter_dmenu.sh", modifier: ["modkey", "Shift"], key: "n"),
    ],
    workspaces: [],
)
