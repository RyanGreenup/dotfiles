//  _        ___                                      ___ _
// | |      / __)_                                   / __|_)
// | | ____| |__| |_ _ _ _ ____      ____ ___  ____ | |__ _  ____    ____ ___  ____
// | |/ _  )  __)  _) | | |    \    / ___) _ \|  _ \|  __) |/ _  |  / ___) _ \|  _ \
// | ( (/ /| |  | |_| | | | | | |  ( (__| |_| | | | | |  | ( ( | |_| |  | |_| | | | |
// |_|\____)_|   \___)____|_|_|_|   \____)___/|_| |_|_|  |_|\_|| (_)_|   \___/|_| |_|
// A WindowManager for Adventurers                         (____/
// For info about configuration please visit https://github.com/leftwm/leftwm/wiki
#![enable(implicit_some)]
(
    modkey: "Mod4",
    mousekey: "Mod4",
    tags: [
        "1.Agenda",
        "2.Browser",
        "3.Workspace",
        "4.Workspace",
        "5.Projects",
        "6.Notes",
        "7.Misc",
        "8.Messaging",
        "9.Shell",
        "10.",
    ],
    layouts: [
        "Fibonacci",
        "MainAndVertStack",
        "MainAndDeck",
    ],
    /*
       This is commented out to enable all layouts
    layouts: [
        MainAndVertStack,
        MainAndHorizontalStack,
        MainAndDeck,
        GridHorizontal,
        EvenHorizontal,
        EvenVertical,
        Fibonacci,
        LeftMain,
        CenterMain,
        CenterMainBalanced,
        CenterMainFluid,
        Monocle,
        RightWiderLeftStack,
        LeftWiderRightStack,
    ],
    */
    max_window_width:          None,
    layout_mode:               Tag,
    insert_behavior:           Bottom,
    disable_current_tag_swap:  false,
    disable_tile_drag:         false,
    focus_behaviour:           Sloppy,
    focus_new_windows:         true,
    scratchpad: [
        ( name:  "Alacritty", // This is the name which is referenced when calling (case-sensitive)
         value: "alacritty", spawn_floating: true,

          // The command to load the application if it isn't started (first application to start)
          // x, y, width, height are in pixels when an integer is inputted or a percentage when a float is inputted.
          // These values are relative to the size of the workspace, and will be restricted depending on the workspace size.
          x: 50.0, y: 50.0, height: 600, width: 900,
        ),
    ],
window_rules: [
  // windows whose WM_CLASS is "Element" will be spawn on tag 8 (by position, 1-indexed)
  ( window_class: "Element", spawn_on_tag: 8 ),
  // windows whose window title is "Pentablet" will be spawned floating on tag 9
  // ( window_title: "Pentablet", spawn_on_tag: 9, spawn_floating: true ),
  // windows whose WM_CLASS matches "*.app_2.*" regular expression will be spawn on tag 2
  ( window_title: "*.py*", spawn_on_tag: 2 ),
],
    keybind: [
        // Find more commands with:
        //    $ `leftwm command --list`
        // Check config with:
        //    $ `leftwm check ~/.config/leftwm/config.ron`

        (command: Execute,                 modifier: ["modkey"],                 key: "d",
         // value: "rofi -location 2 -show drun lines 10 -eh 1 -mathing fuzzy -show-icons -window-thumbnail  -theme-str \'element-icon { size: 3ch;}\' -theme DarkBlue"     ),
         value: "rofi -show drun -mathing fuzzy -show-icons -window-thumbnail"     ),
        (command: Execute,                 modifier: ["modkey"],                 key: "space",
         value: "rofi -show combi -combi-modi 'window,drun,run' -modi combi  lines 10 -eh 2 -mathing fuzzy -show-icons -theme DarkBlue -theme-str 'element-icon { size: 4ch;}'"     ),
        (command: Execute,                 modifier: ["modkey"],                 key: "c",
         value: "rofi -show calc -modi calc -no-show-match -no-sort -theme DarkBlue"                                                                                     ),
        (command: Execute,                 modifier: ["modkey"],                 key: "slash",
         value: "rofi -location 2 -show window lines 10 -eh 2 -mathing fuzzy -show-icons -window-thumbnail  -theme-str \'element-icon { size: 6ch; }\' -theme DarkBlue"  ),
        (command: Execute,                 modifier: ["modkey", "Shift"],        key: "t",
         value: "zellij list-sessions | grep agenda && alacritty -e zellij attach agenda || alacritty -e zellij --session agenda --layout ~/Agenda/Agenda_Maybe/tool/agenda.kdl"                                        ),

        (command: ToggleFullScreen,        modifier: ["modkey"],                 key: "m",        value: ""                                                                                            ),
        (command: ToggleFloating,          modifier: ["modkey", "Shift"],        key: "space"                                                                                                          ),
        (command: MoveWindowToNextTag,     modifier: ["modkey", "Shift"],        key: "p"                                                                                                              ),
        (command: MoveWindowToPreviousTag, modifier: ["modkey", "Shift"],        key: "n"                                                                                                              ),
        (command: FocusNextTag,     modifier: ["modkey"],                       key: "p"                                                                                                              ),
        (command: FocusPreviousTag, modifier: ["modkey"],                       key: "n"                                                                                                              ),
        (command: ToggleSticky,            modifier: ["modkey"],                 key: "s"                                                                                                              ),
        // (command: Execute,              modifier: ["modkey"],                 key: "n",        value: "dash /home/ryan/.local/bin/dokuwiki_dmenu.sh"                                                ),
        // (command: Execute,              modifier: ["modkey", "Shift"],        key: "n",        value: "dash /home/ryan/.local/bin/jupyter_dmenu.sh"                                                 ),
        // (command: Execute,              modifier: ["modkey", "Shift"],        key: "t",        value: "cd ~/Agenda/Agenda_Maybe/ && alacritty -e lf"                                                ),
        // (command: Execute,              modifier: ["modkey", "Shift"],        key: "t",        value: "cd ~/Agenda/Agenda_Maybe/ && alacritty -e zellij attach agenda || zellij --session agenda "  ),
        // (command: FloatingToTile,       modifier: ["modkey", "Shift"],        key: "t",        value: ""                                                                                            ),
        // (command: Execute,              modifier: ["modkey"],                 key: "a",        value: "leftwm_change_theme.sh"                                                                      ),
        (command: ToggleScratchPad,        modifier: ["modkey"],                 key: "grave",    value: "Alacritty" /* Name set for the scratchpad */                                                 ),
        (command: ReturnToLastTag,         modifier: ["modkey"],                 key: "Tab",      value: ""                                                                                            ),
        (command: Execute,                 modifier: ["modkey", "Shift"],        key: "BackSpace", value: "printf mem | doas tee /sys/power/state"                                                     ),
        (command: IncreaseMainWidth,       modifier: ["modkey"],                 key: "l",        value: "5"                                                                                           ),
        (command: DecreaseMainWidth,       modifier: ["modkey"],                 key: "h",        value: "5"                                                                                           ),
        (command: Execute,                 modifier: ["modkey", "Shift"],        key: "Return",   value: "alacritty"                                                                                   ),
        (command: Execute,                 modifier: ["modkey"],                 key: "t",        value: "alacritty"                                                                                   ),
        (command: CloseWindow,             modifier: ["modkey"],                 key: "q",        value: ""                                                                                            ),
        (command: SoftReload,              modifier: ["modkey", "Shift"],        key: "r",        value: ""                                                                                            ),
        (command: Execute,                 modifier: ["modkey", "Shift"],        key: "x",        value: "loginctl kill-session $XDG_SESSION_ID"                                                       ),
        (command: Execute,                 modifier: ["modkey", "Control"],      key: "l",        value: "slock"                                                                                       ),
        (command: MoveToLastWorkspace,     modifier: ["modkey", "Shift"],        key: "w",        value: ""                                                                                            ),
        (command: SwapTags,                modifier: ["modkey"],                 key: "w",        value: ""                                                                                            ), // This swaps the desktop in the monitors (workspace=monitor
        (command: MoveWindowUp,            modifier: ["modkey", "Shift"],        key: "k",        value: ""                                                                                            ),
        (command: MoveWindowDown,          modifier: ["modkey", "Shift"],        key: "j",        value: ""                                                                                            ),
        (command: MoveWindowTop,           modifier: ["modkey"],                 key: "Return",   value: ""                                                                                            ),
        (command: FocusWindowUp,           modifier: ["modkey"],                 key: "k",        value: ""                                                                                            ),
        (command: FocusWindowDown,         modifier: ["modkey"],                 key: "j",        value: ""                                                                                            ),
        (command: NextLayout,              modifier: ["modkey", "Control"],      key: "k",        value: ""                                                                                            ),
        (command: PreviousLayout,          modifier: ["modkey", "Control"],      key: "j",        value: ""                                                                                            ),
        (command: MoveWindowUp,            modifier: ["modkey", "Shift"],        key: "Up",       value: ""                                                                                            ),
        (command: MoveWindowDown,          modifier: ["modkey", "Shift"],        key: "Down",     value: ""                                                                                            ),
        (command: FocusWindowUp,           modifier: ["modkey"],                 key: "Up",       value: ""                                                                                            ),
        (command: FocusWindowDown,         modifier: ["modkey"],                 key: "Down",     value: ""                                                                                            ),
        (command: NextLayout,              modifier: ["modkey", "Control"],      key: "Up",       value: ""                                                                                            ),
        (command: PreviousLayout,          modifier: ["modkey", "Control"],      key: "Down",     value: ""                                                                                            ),
        (command: FocusWorkspaceNext,      modifier: ["modkey"],                 key: "Right",    value: ""                                                                                            ),
        (command: FocusWorkspacePrevious,  modifier: ["modkey"],                 key: "Left",     value: ""                                                                                            ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "1",        value: "1"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "2",        value: "2"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "3",        value: "3"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "4",        value: "4"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "5",        value: "5"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "6",        value: "6"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "7",        value: "7"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "8",        value: "8"                                                                                           ),
        (command: GotoTag,                 modifier: ["modkey"],                 key: "9",        value: "9"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "1",        value: "1"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "2",        value: "2"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "3",        value: "3"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "4",        value: "4"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "5",        value: "5"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "6",        value: "6"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "7",        value: "7"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "8",        value: "8"                                                                                           ),
        (command: MoveToTag,               modifier: ["modkey", "Shift"],        key: "9",        value: "9"                                                                                           ),
        (command: RotateTag,               modifier: ["modkey"],                 key: "z",        value: ""                                                                                            ),
        (command: SetMarginMultiplier,     modifier: ["modkey", "Control"],      key: "equal",    value: "8.0"                                                                                         ),
        (command: SetMarginMultiplier,     modifier: ["modkey", "Control"],      key: "minus",    value: "3.0"                                                                                         ),
        (command: SetMarginMultiplier,     modifier: ["modkey", "Control"],      key: "0",        value: "0.5"                                                                                         ),
        (command: FocusNextTag,            modifier: ["Control", "Alt"],         key: "Right",    value: ""                                                                                            ),
        (command: FocusPreviousTag,        modifier: ["Control", "Alt"],         key: "Left",     value: ""                                                                                            ),
        (command: SetLayout,               modifier: ["modkey"],                 key: "f",        value: "Fibonacci"                                                                                   ),
        (command: SetLayout,               modifier: ["modkey"],                 key: "F1",       value: "Fibonacci"                                                                                   ),
        (command: SetLayout,               modifier: ["modkey"],                 key: "F2",       value: "MainAndDeck"                                                                                 ),
        (command: SetLayout,               modifier: ["modkey"],                 key: "F3",       value: "MainAndVertStack"                                                                            ),
        // (command: SetLayout,               modifier: ["modkey"],                 key: "F4",       value: "MainAndHorizontalStack"                                                                      ),
        // (command: SetLayout,               modifier: ["modkey"],                 key: "F5",       value: "CenterMain"                                                                                  ),
        // (command: SetLayout,               modifier: ["modkey"],                 key: "F6",       value: "CenterMainBalanced"                                                                          ),
        // (command: SetLayout,               modifier: ["modkey"],                 key: "F7",       value: "GridHorizontal"                                                                              ),
        (command: HardReload,              modifier: ["modkey", "Control"],      key: "r",        value: ""                                                                                            ),
        (command: Execute,                 modifier: ["modkey", "Shift"],        key: "s",        value: "maim --select | xclip -selection clipboard -target image/png"                                ),
    ],
    workspaces: [],
)
